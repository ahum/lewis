# This is an example config for a project pipeline

name: "my-app"
git: "git@github.com:corespring/corespring-api.git"
flows: [
  dev:
    trigger: "scm-change"
    tasks: [ "compile", "unit-test", "integration-test", "build-slug", "deploy-slug", "regression-test" ]
  qa:
    trigger: "user-command"
    flows: ["dev"]
    tasks: [ "backup-db", "copy-db", "migrate-db", "synch-s3", "deploy-slug", "regression-test"]
  staging:
    trigger: "user-command"
    flows: ["qa"]
    tasks: [ "backup-db", "copy-db", "migrate-db", "synch-s3", "deploy-slug", "regression-test"]
  live:
    trigger: "user-command"
    flows: ["staging"]
    tasks: [ "backup-db", "migrate-db", "deploy-slug", "regression-test"]
]

###
   Tasks
   --
   Lewis will try and run the following script relative to the config file:
   bin/${task_name}
   eg: bin/compile
   the following parameters will be passed to the script:
   --flow flow
   --uid uid

   This will allow the script to apply the appropriate variables

   1. add config
   2. checkout source from repo to some path
~/lewis/projects/my-app
  repo
    ... src here ...
  lewis
    lewis.cson
    bin
      compile etc...

  3. run the flow that is hooked up to scm-change
    - in dir repo run:
      - 'compile --flow dev --uid 1'
      - 'unit-test --flow dev --uid 1'
      - 'integration-test --flow dev --uid 1'
      - 'build-slug --flow dev --uid 1'
      - 'deploy-slug --flow dev --uid 1'
      - 'regression-test --flow dev --uid 1'
  4. record the successful completion of flow: dev:1

  --- time passes

  user triggers flow:qa

  5. git latest source
  6. get uid
  7. if flow dev:1 is successful - run flow...
  8. record successful completion of flow: qa:1


  --- time passes - src goes to 2

  -- user triggers flow:qa

  1. get latest source
  2. get uid
  3. if flow dev:2 and successful run flow
    or else fail

###
